"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./src/utils/conversion.ts":
/*!*********************************!*\
  !*** ./src/utils/conversion.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateAverageGlucose: () => (/* binding */ calculateAverageGlucose),\n/* harmony export */   convertAvgMmolLToHbA1c: () => (/* binding */ convertAvgMmolLToHbA1c),\n/* harmony export */   convertHbA1cToAvgMmolL: () => (/* binding */ convertHbA1cToAvgMmolL),\n/* harmony export */   convertHbA1cToMmolMol: () => (/* binding */ convertHbA1cToMmolMol),\n/* harmony export */   convertMmolMolToHbA1c: () => (/* binding */ convertMmolMolToHbA1c),\n/* harmony export */   convertMmolMolToPercent: () => (/* binding */ convertMmolMolToPercent),\n/* harmony export */   convertPercentToMmolMol: () => (/* binding */ convertPercentToMmolMol)\n/* harmony export */ });\nfunction convertHbA1cToMmolMol(hbA1c) {\n    return Math.round((hbA1c - 2.15) * 10.929);\n}\nfunction convertMmolMolToHbA1c(mmolMol) {\n    return parseFloat((mmolMol / 10.929 + 2.15).toFixed(2));\n}\nfunction convertHbA1cToAvgMmolL(hbA1c) {\n    return Math.round(hbA1c * 1.59 - 2.59);\n}\nfunction convertAvgMmolLToHbA1c(avgMmolL) {\n    return parseFloat(((avgMmolL + 2.59) / 1.59).toFixed(2));\n}\nconst convertPercentToMmolMol = (percent)=>{\n    return 10.929 * (percent - 2.15);\n};\nconst convertMmolMolToPercent = (mmolMol)=>{\n    return mmolMol / 10.929 + 2.15;\n};\nconst calculateAverageGlucose = (hba1cPercent)=>{\n    return hba1cPercent * 1.59 - 2.59;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL3NyYy91dGlscy9jb252ZXJzaW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBTyxTQUFTQSxzQkFBc0JDLEtBQWE7SUFDL0MsT0FBT0MsS0FBS0MsS0FBSyxDQUFDLENBQUNGLFFBQVEsSUFBRyxJQUFLO0FBQ3ZDO0FBRU8sU0FBU0csc0JBQXNCQyxPQUFlO0lBQ2pELE9BQU9DLFdBQVcsQ0FBQ0QsVUFBVSxTQUFTLElBQUcsRUFBR0UsT0FBTyxDQUFDO0FBQ3hEO0FBRU8sU0FBU0MsdUJBQXVCUCxLQUFhO0lBQ2hELE9BQU9DLEtBQUtDLEtBQUssQ0FBQyxRQUFTLE9BQVE7QUFDdkM7QUFFTyxTQUFTTSx1QkFBdUJDLFFBQWdCO0lBQ25ELE9BQU9KLFdBQVcsQ0FBQyxDQUFDSSxXQUFXLElBQUcsSUFBRyxJQUFHLEVBQUdILE9BQU8sQ0FBQztBQUN2RDtBQUVPLE1BQU1JLDBCQUEwQixDQUFDQztJQUNwQyxPQUFPLFNBQVVBLENBQUFBLFVBQVUsSUFBRztBQUNoQyxFQUFFO0FBRUssTUFBTUMsMEJBQTBCLENBQUNSO0lBQ3RDLE9BQU8sVUFBVyxTQUFVO0FBQzlCLEVBQUU7QUFFRyxNQUFNUywwQkFBMEIsQ0FBQ0M7SUFDcEMsT0FBTyxlQUFnQixPQUFRO0FBQ2pDLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaGFycHkvaGJhMWMtY29udmVydG9yL2hiYTFjLWNvbnZlcnRlci9zcmMvdXRpbHMvY29udmVyc2lvbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY29udmVydEhiQTFjVG9NbW9sTW9sKGhiQTFjOiBudW1iZXIpOiBudW1iZXIge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKChoYkExYyAtIDIuMTUpICogMTAuOTI5KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNvbnZlcnRNbW9sTW9sVG9IYkExYyhtbW9sTW9sOiBudW1iZXIpOiBudW1iZXIge1xuICAgIHJldHVybiBwYXJzZUZsb2F0KChtbW9sTW9sIC8gMTAuOTI5ICsgMi4xNSkudG9GaXhlZCgyKSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0SGJBMWNUb0F2Z01tb2xMKGhiQTFjOiBudW1iZXIpOiBudW1iZXIge1xuICAgIHJldHVybiBNYXRoLnJvdW5kKChoYkExYyAqIDEuNTkpIC0gMi41OSApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY29udmVydEF2Z01tb2xMVG9IYkExYyhhdmdNbW9sTDogbnVtYmVyKTogbnVtYmVyIHtcbiAgICByZXR1cm4gcGFyc2VGbG9hdCgoKGF2Z01tb2xMICsgMi41OSkvMS41OSkudG9GaXhlZCgyKSk7XG59XG5cbmV4cG9ydCBjb25zdCBjb252ZXJ0UGVyY2VudFRvTW1vbE1vbCA9IChwZXJjZW50OiBudW1iZXIpOiBudW1iZXIgPT4ge1xuICAgIHJldHVybiAxMC45MjkgKiAocGVyY2VudCAtIDIuMTUpO1xuICB9O1xuICBcbiAgZXhwb3J0IGNvbnN0IGNvbnZlcnRNbW9sTW9sVG9QZXJjZW50ID0gKG1tb2xNb2w6IG51bWJlcik6IG51bWJlciA9PiB7XG4gICAgcmV0dXJuIChtbW9sTW9sIC8gMTAuOTI5KSArIDIuMTU7XG4gIH07XG4gIFxuZXhwb3J0IGNvbnN0IGNhbGN1bGF0ZUF2ZXJhZ2VHbHVjb3NlID0gKGhiYTFjUGVyY2VudDogbnVtYmVyKTogbnVtYmVyID0+IHtcbiAgICByZXR1cm4gKGhiYTFjUGVyY2VudCAqIDEuNTkpIC0gMi41OTtcbiAgfTsiXSwibmFtZXMiOlsiY29udmVydEhiQTFjVG9NbW9sTW9sIiwiaGJBMWMiLCJNYXRoIiwicm91bmQiLCJjb252ZXJ0TW1vbE1vbFRvSGJBMWMiLCJtbW9sTW9sIiwicGFyc2VGbG9hdCIsInRvRml4ZWQiLCJjb252ZXJ0SGJBMWNUb0F2Z01tb2xMIiwiY29udmVydEF2Z01tb2xMVG9IYkExYyIsImF2Z01tb2xMIiwiY29udmVydFBlcmNlbnRUb01tb2xNb2wiLCJwZXJjZW50IiwiY29udmVydE1tb2xNb2xUb1BlcmNlbnQiLCJjYWxjdWxhdGVBdmVyYWdlR2x1Y29zZSIsImhiYTFjUGVyY2VudCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./src/utils/conversion.ts\n"));

/***/ })

});